*Exercícios SEÇÃO 5*

---------- WHILE ----------

- Problema crescente:

   Algoritmo "crescente"
   //Vazio

   Var

      x, y : inteiro

   Inicio

      escreval("Digite dois números: ")
         leia(x)
         leia(y)

      enquanto x <> y faca
         se x > y entao
            escreval("Decrescente")
         senao
            escreval("Crescente")
         fimse

         escreval("Digite outros dois números: ")
         leia(x)
         leia(y)

      fimenquanto

   Fimalgoritmo
   //Vazio
   
=========================================================================  
- Problema media_idade:

   Algoritmo "media_idades"
   //Vazio

   Var

      idades, soma, cont : inteiro
      media : real

   Inicio

      soma <- 0
      cont <- 0

      escreval("Digite as idades: ")
      leia(idades)

      enquanto idades >= 0 faca
         soma <- soma + idades
         cont <- cont + 1
         leia(idades)
      fimenquanto

      se cont = 0 entao
         escreval("IMPOSSÍVEL CALCULAR")
      senao
         media <- soma / cont
         escreval("MEDIA = ", media:4:2)
      fimse

   Fimalgoritmo
   //Vazio

========================================================================= 
- Problema senha_fixa:

   Algoritmo "senha_fixa"
   //Vazio

   Var

     tentativa, senha : inteiro

   Inicio

      senha <- 2002

      escreva("Digite a senha: ")
      leia(tentativa)

      enquanto tentativa <> senha faca
         escreva("Senha inválida! Tente novamente: ")
         leia(tentativa)
      fimenquanto

      escreval("Acesso permitido!")

   Fimalgoritmo
   //Vazio

========================================================================= 
- Problema quadrante:

   Algoritmo "quadrante"
   //Vazio

   Var

      X, Y : real

   Inicio

      escreval("Digite os valores das coordenadas X e Y:")
      leia(X)
      leia(Y)

      enquanto (X <> 0) e (Y <> 0) faca

         se (X > 0) e (Y > 0) entao
            escreval("QUADRANTE Q1")
         senao
            se (X < 0) e (Y > 0) entao
               escreval("QUADRANTE Q2")
            senao
               se (X < 0) e (Y < 0) entao
                  escreval("QUADRANTE Q3")
               senao
                  escreval("QUADRANTE Q4")
               fimse
            fimse
         fimse

         escreval("Digite os valores das coordenadas X e Y:")
         leia(X)
         leia(Y)

      fimenquanto

   Fimalgoritmo
   //Vazio

========================================================================= 
- Problema validação de nota:

   Algoritmo "validacao_de_nota"
   //Vazio

   Var

      nota1, nota2, media : real

   Inicio

      escreva("Digite a primeira nota: ")
      leia(nota1)

      enquanto (nota1 < 0) ou (nota1 > 10) faca
         escreva("Valor inválido! Tente novamente: ")
         leia(nota1)
      fimenquanto

      escreva("Digite a segunda nota: ")
      leia(nota2)

      enquanto (nota2 < 0) ou (nota2 > 10) faca
         escreva("Valor inválido! Tente novamente: ")
         leia(nota2)
      fimenquanto

      media <- (nota1 + nota2) / 2
      escreval("MÉDIA = ", media:4:2)

   Fimalgoritmo
   //Vazio

========================================================================= 
- Problema combustível:

   Algoritmo "combustivel"
   //Vazio

   Var

      codigo, alcool, gasolina, diesel : inteiro

   Inicio

      alcool <- 0
      gasolina <- 0
      diesel <- 0
      escreva("Informe um código (1, 2, 3) ou 4 para parar: ")
      leia(codigo)

      enquanto codigo <> 4 faca

         escolha codigo
         caso 1
            alcool <- alcool + 1
         caso 2
            gasolina <- gasolina + 1
         caso 3
            diesel <- diesel + 1
         fimescolha

         escreva("Informe um código (1, 2, 3) ou 4 para parar: ")
         leia(codigo)

      fimenquanto

      escreval("MUITO OBRIGADO")
      escreval("Álcool: ", alcool)
      escreval("Gasolina: ", gasolina)
      escreval("Diesel: ", diesel)

   Fimalgoritmo
   //Vazio

========================================================================= 
- Problema pares consecutivos:

   Algoritmo "pares_consecutivos"
   //Vazio

   Var

      X, soma : inteiro

   Inicio

      escreva("Digite um número inteiro: ")
      leia(X)

      enquanto X <> 0 faca

         se X % 2 <> 0 entao
            X <- X + 1
         fimse

         soma <- 5 * X + 20
         escreval("SOMA = ", soma)

         escreva("Digite um número inteiro: ")
         leia(X)

      fimenquanto

   Fimalgoritmo
   //Vazio
